<?xml version="1.0" encoding="UTF-8"?>

<!-- Written to assume that classpath is rooted in the current directory. -->
<!-- So this should be OK if you make this script in the root of a filesystem. -->
<!-- If not, you may prefer to adjust the basedir, or move some directories around. -->
<!-- The idea is that both Ant and NetBeans have to know what the package root is -->
<!-- for the classes in your application. -->
<project name="apps_config" basedir="." default="all">
    <import file="../config.xml" />
    
    <dirname property="apps-srcroot" file="${ant.file.apps_config}" />

	<property name="classpath-ref" value="default.classpath" />
	<property name="manifest-classpath" value="../xal-core.jar ../xal-lib.jar ../xal-datasource.jar" />

    <!-- Don't worry if you don't know the Ant syntax completely or need help on some tasks! -->
    <!-- The standard Ant documentation is bundled. See Help | Help Sets | Ant 1.4.1 Manual. -->

    <target name="init">
        <!-- You can set up any variables you want used throughout the script here. -->
        <property environment="env" />
        <property name="appname" value="${ant.project.name}" />
		<property name="app-prefix" value="xal.app" />
		<property name="mainclass" value="${app-prefix}.${appname}.Main" />
        <property name="app-ref" value="xal/app/${appname}" />
        <property name="app-srcroot" value="${apps-srcroot}/${app-ref}" />
        
        <mkdir dir="${buildroot}" />
        <mkdir dir="${buildroot}/compile/" />
    </target>


	<path id="default.classpath">
		<pathelement location="${buildroot}/jar/xal-core.jar" />
		<pathelement location="${buildroot}/jar/xal-lib.jar" />
		<pathelement location="${buildroot}/jar/xal-datasource.jar" />
	</path>

	
    <target name="compile" depends="init">
        <!-- Both srcdir and destdir should be package roots. -->
        <!-- They could be different of course; in that case NetBeans can also be set -->
        <!-- up to compile to a different filesystem in the same way; see Compiler Types: -->
        <mkdir dir="${buildroot}/compile/apps/${appname}"/>
        <javac srcdir="${app-srcroot}" destdir="${buildroot}/compile/apps/${appname}" debug="true" source="1.6" target="1.6" includeAntRuntime="no" deprecation="true">
            <!-- To add something to the classpath: -->
			<classpath refid="${classpath-ref}"/>
            <!-- To exclude some files: -->
            <!--
            <exclude name="com/foo/SomeFile.java"/>
            <exclude name="com/foo/somepackage/"/>
            -->
        </javac>
    </target>

    <target name="jar" depends="init,compile">
        <mkdir dir="${buildroot}/jar"/>
        <mkdir dir="${buildroot}/jar/apps"/>
        <!-- To make a standalone app: -->
        <!-- 1. Create a myapp.mf manifest somewhere. -->
        <!-- 2. Put in it: -->
        <!--    Manifest-Version: 1.0 -->
        <!--    Main-Class: com.foo.Main -->
        <!-- 3. Pass to <jar>: manifest="myapp.mf" -->
        <jar jarfile="${buildroot}/jar/apps/${appname}.jar" compress="true" basedir="${buildroot}/compile/apps/${appname}" >
            <manifest>
              <attribute name="Manifest-Version" value="1.0"/>
              <attribute name="Main-Class" value="${mainclass}"/>
              <attribute name="Class-Path" value="${manifest-classpath}"/>
            </manifest>
            <fileset dir=".">
              <include name="xal/app/${appname}/**/*.class"/>
            </fileset>
            <fileset dir="${apps-srcroot}">
                <include name="${app-ref}/**/*.html"/>
                <include name="${app-ref}/**/*.css"/>
                <include name="${app-ref}/**/*.gif"/>
                <include name="${app-ref}/**/*.png"/>
                <include name="${app-ref}/**/*.jpg"/>
                <include name="${app-ref}/**/*.dat"/>
                <include name="${app-ref}/**/*.properties"/>
                <include name="${app-ref}/**/*.bricks"/>
                <include name="${app-ref}/**/*.xml"/>
                
                <exclude name="${app-ref}/**/build.xml"/>
                <exclude name="${app-ref}/**/*.java"/>
                <exclude name="${app-ref}/**/*.form"/>
                <exclude name="${app-ref}/javadoc"/>
            </fileset>
        </jar>
    </target>
    
    <target name="run" depends="init" description="Run application.">
    	<java jar="${buildroot}/jar/apps/${appname}.jar" fork="true">
	</java> 
    </target>
    
    <target name="all" depends="init,jar" description="Build everything.">
        <echo message="${appname} built!"/>
    </target>

    <target name="javadoc" depends="init" description="Javadoc for ${appname} app. API.">
        <mkdir dir="${buildroot}/javadoc"/>
        <javadoc packagenames="${apps}.${appname}" destdir="${buildroot}/javadoc">
            <sourcepath>
                <pathelement location="${xalhome}"/>
            </sourcepath>
        </javadoc>
    </target>

    <target name="clean" depends="init" description="Clean all build products.">
        <delete dir="${buildroot}/compile/apps/${appname}"/>
        <delete file="${buildroot}/jar/apps/${appname}.jar"/>
        <delete dir="${buildroot}/javadoc/apps/${appname}"/>
    </target>

</project>
