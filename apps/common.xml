<?xml version="1.0" encoding="UTF-8"?>

<project name="apps_config" basedir="." default="all">
    <import file="../common.xml" />
    
    <dirname property="apps.src.root" file="${ant.file.apps_config}" />

	<property name="classpath.ref" value="default.classpath" />
	<property name="manifest.classpath" value="../xal-core.jar ../xal-lib.jar ../xal-datasource.jar" />

    <target name="init">
        <property environment="env" />
        <property name="appname" value="${ant.project.name}" />
		<property name="app.package.prefix" value="xal.app" />
		<property name="mainclass" value="${app.package.prefix}.${appname}.Main" />
        <property name="app.ref" value="${appname}" />
        <property name="app.src.root" value="${apps.src.root}/${app.ref}" />
        <property name="apps.build.root" value="${build.root}/compile/apps" />
        <property name="app.build.root" value="${apps.build.root}" />
        <property name="app.relative.path" value="xal/app/${appname}" />
        
        <!-- determine whether building should be allowed -->
        <!-- don't build if the build is a batch build and this project explicitly excludes batch building -->
        <condition property="allows.build">
            <not>
                <and>
                    <isset property="batch.app.build" />
                    <isset property="exclude.batch.build" />
                </and>
            </not>
        </condition>
        
        <!-- determine whether deployment should be allowed -->
        <!-- don't deploy if this project explicitly excludes batch building -->
        <condition property="allows.deploy">
            <not>
                <isset property="exclude.deploy" />
            </not>
        </condition>
        
        <mkdir dir="${build.root}" />
        <mkdir dir="${apps.build.root}" />
        
        <echo message="Conditionally processing ${appname}" />
    </target>


	<path id="default.classpath">
		<pathelement location="${build.root}/jar/xal-core.jar" />
		<pathelement location="${build.root}/jar/xal-lib.jar" />
		<pathelement location="${build.root}/jar/xal-datasource.jar" />
	</path>

	
    <target name="compile" depends="init" if="allows.build">
        <mkdir dir="${app.build.root}"/>
        
        <javac srcdir="${app.src.root}/src" destdir="${app.build.root}" debug="true" source="1.6" target="1.6" includeAntRuntime="no" deprecation="true">
			<classpath refid="${classpath.ref}"/>
        </javac>
        
        <copy todir="${app.build.root}/${app.relative.path}/resources">
            <fileset dir="${app.src.root}/resources" />
        </copy>
    </target>

    <target name="jar" depends="init,compile" if="allows.build">
        <mkdir dir="${build.root}/jar"/>
        <mkdir dir="${build.root}/jar/apps"/>
        <jar jarfile="${build.root}/jar/apps/${appname}.jar" compress="true" basedir="${app.build.root}" >
            <manifest>
              <attribute name="Manifest-Version" value="1.0"/>
              <attribute name="Main-Class" value="${mainclass}"/>
              <attribute name="Class-Path" value="${manifest.classpath}"/>
            </manifest>
            
            <fileset dir=".">
                <include name="${app.relative.path}/**/*"/>
            </fileset>
        </jar>
    </target>
    
    <target name="run" depends="init" description="Run application.">
    	<java jar="${build.root}/jar/apps/${appname}.jar" fork="true">
	</java> 
    </target>
    
    <target name="all" depends="init,jar" description="Build everything." if="allows.build">
        <echo message="${appname} built!"/>
    </target>
    
    <target name="javadoc" depends="init" description="Javadoc for ${appname} app. API.">
        <mkdir dir="${build.root}/javadoc"/>
        <javadoc packagenames="${apps}.${appname}" destdir="${build.root}/javadoc">
            <sourcepath>
                <pathelement location="${xal.home}"/>
            </sourcepath>
        </javadoc>
    </target>

    <target name="clean" depends="init" description="Clean all build products.">
        <delete dir="${apps.build.root}/${app.relative.path}"/>
        <delete file="${build.root}/jar/apps/${appname}.jar"/>
        <delete dir="${build.root}/javadoc/apps/${appname}"/>
    </target>

</project>
