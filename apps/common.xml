<?xml version="1.0" encoding="UTF-8"?>

<project name="apps_config" basedir="." default="all">
    <import file="../common.xml" />
    
    <dirname property="apps-srcroot" file="${ant.file.apps_config}" />

	<property name="classpath-ref" value="default.classpath" />
	<property name="manifest-classpath" value="../xal-core.jar ../xal-lib.jar ../xal-datasource.jar" />

    <target name="init">
        <property environment="env" />
        <property name="appname" value="${ant.project.name}" />
		<property name="app-prefix" value="xal.app" />
		<property name="mainclass" value="${app-prefix}.${appname}.Main" />
        <property name="app-ref" value="${appname}" />
        <property name="approot" value="${apps-srcroot}/${app-ref}" />
        <property name="apps-buildroot" value="${buildroot}/compile/apps" />
        <property name="app-buildroot" value="${apps-buildroot}" />
        <property name="app-relative-path" value="xal/app/${appname}" />
        
        <!-- determine whether building should be allowed -->
        <!-- don't build if the build is a batch build and this project explicitly excludes batch building -->
        <condition property="allows.build">
            <not>
                <and>
                    <isset property="batch.app.build" />
                    <isset property="exclude.batch.build" />
                </and>
            </not>
        </condition>
        
        <!-- determine whether deployment should be allowed -->
        <!-- don't deploy if this project explicitly excludes batch building -->
        <condition property="allows.deploy">
            <not>
                <isset property="exclude.deploy" />
            </not>
        </condition>
        
        <mkdir dir="${buildroot}" />
        <mkdir dir="${apps-buildroot}" />
        
        <echo message="Conditionally building ${appname}" />
    </target>


	<path id="default.classpath">
		<pathelement location="${buildroot}/jar/xal-core.jar" />
		<pathelement location="${buildroot}/jar/xal-lib.jar" />
		<pathelement location="${buildroot}/jar/xal-datasource.jar" />
	</path>

	
    <target name="compile" depends="init" if="allows.build">
        <mkdir dir="${app-buildroot}"/>
        
        <javac srcdir="${approot}/src" destdir="${app-buildroot}" debug="true" source="1.6" target="1.6" includeAntRuntime="no" deprecation="true">
			<classpath refid="${classpath-ref}"/>
        </javac>
        
        <copy todir="${app-buildroot}/${app-relative-path}/resources">
            <fileset dir="${approot}/resources" />
        </copy>
    </target>

    <target name="jar" depends="init,compile" if="allows.build">
        <mkdir dir="${buildroot}/jar"/>
        <mkdir dir="${buildroot}/jar/apps"/>
        <jar jarfile="${buildroot}/jar/apps/${appname}.jar" compress="true" basedir="${app-buildroot}" >
            <manifest>
              <attribute name="Manifest-Version" value="1.0"/>
              <attribute name="Main-Class" value="${mainclass}"/>
              <attribute name="Class-Path" value="${manifest-classpath}"/>
            </manifest>
            
            <fileset dir=".">
                <include name="${app-relative-path}/**/*"/>
            </fileset>
        </jar>
    </target>
    
    <target name="run" depends="init" description="Run application.">
    	<java jar="${buildroot}/jar/apps/${appname}.jar" fork="true">
	</java> 
    </target>
    
    <target name="all" depends="init,jar" description="Build everything." if="allows.build">
        <echo message="${appname} built!"/>
    </target>
    
    <target name="javadoc" depends="init" description="Javadoc for ${appname} app. API.">
        <mkdir dir="${buildroot}/javadoc"/>
        <javadoc packagenames="${apps}.${appname}" destdir="${buildroot}/javadoc">
            <sourcepath>
                <pathelement location="${xalhome}"/>
            </sourcepath>
        </javadoc>
    </target>

    <target name="clean" depends="init" description="Clean all build products.">
        <delete dir="${apps-buildroot}/${app-relative-path}"/>
        <delete file="${buildroot}/jar/apps/${appname}.jar"/>
        <delete dir="${buildroot}/javadoc/apps/${appname}"/>
    </target>

</project>
